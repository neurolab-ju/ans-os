---
API: 2
OpenSesame: 3.1.2
Platform: posix
---
set width 1024
set uniform_coordinates yes
set title ANS_paradigm
set subject_parity even
set subject_nr 0
set start Experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set sampler_backend legacy
set round_decimals 2
set my_const 10
set mouse_backend xpyriment
set keyboard_backend legacy
set isTrue True
set isPause False
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path "/Users/michael/Developer/ans-os"
set disable_garbage_collection yes
set description "Aproximal numercial system paradigm by Plassova, Vavrecka and Tesar 2016, University of South Bohemia"
set coordinates uniform
set compensation 0
set color_backend legacy
set clock_backend legacy
set canvas_backend xpyriment
set bidi no
set background black

define sketchpad BlankAnswer
	set duration 0
	set description "Show fixation cross while participant can respond to expeirmental task by mouse click"
	draw fixdot color=white show_if=always style=default x=0 y=0 z_index=0
	draw textline center=1 color="#00ff00" font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if="[DEBUG] == \"yes\"" text="Správně [SCORE]" x=0 y=-320 z_index=0
	draw textline center=1 color="#0080ff" font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if="[DEBUG] == \"yes\"" text="Level [LEVEL]" x=0 y=-288 z_index=0
	draw textline center=1 color="#ffff66" font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if="[DEBUG] == \"yes\"" text="Kolo [TRIAL]" x=0 y=-256 z_index=0

define inline_script CountScore
	set description "Executes Python code"
	___run__
	# I cannot use exp.var.acc because it
	# is expressed in percentage in relative
	# way (across all block and I want just
	# in one block) so I use global variable
	# score which do the job.
	if exp.var.correct == 1:
		var.SCORE += 1
	__end__
	set _prepare ""

define sequence Experiment
	set flush_keyboard yes
	set description "Run whole experiment procedure"
	run Initialization always
	run Instructions always
	run Training always
	run MainExperiment always
	run Finishing always

define feedback Feedback
	set reset_variables yes
	set duration 1500
	set description "Provides feedback to the participant"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=30 html=yes show_if=always text="Your reaction time: [avg_rt] ms<br />Your score: [SCORE]0 %" x=0 y=0 z_index=0

define sketchpad Finish
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Experiment is finaly over" x=0 y=0 z_index=0

define sequence Finishing
	set flush_keyboard yes
	set description "End experiment and shows a map to trasure"
	run Finish always

define sketchpad FishCluster10
	set duration 1500
	set description "Presents main experimental condition e.g., fish cluster of two colors"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="[log_10]" x=0 y=0 z_index=0

define sketchpad FishCluster11
	set duration 1500
	set description "Presents main experimental condition e.g., fish cluster of two colors"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="[log_11]" x=0 y=0 z_index=0

define sketchpad FishCluster12
	set duration 1500
	set description "Presents main experimental condition e.g., fish cluster of two colors"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="[log_12]" x=0 y=0 z_index=0

define sequence FishTrial
	set flush_keyboard yes
	set description "Trial sequence"
	run FishCluster10 "[LEVEL] == 10"
	run FishCluster11 "[LEVEL] == 11"
	run FishCluster12 "[LEVEL] == 12"
	run BlankAnswer always
	run MouseLogger always
	run CountScore always
	run WriteLog always

define inline_script Initialization
	set description "Initialize global variables and print the info for experimenter"
	___run__
	var.LEVEL = 10
	var.SCORE = 0
	var.TRIAL = 1
	var.STIMULI = ""
	var.BLOCK_PAUSE = 5
	var.DEBUG = True
	var.isPause = False
	__end__
	set _prepare ""

define sequence Instructions
	set flush_keyboard yes
	set description "Run buch or intial instruction like game intro"
	run Introduction always

define sketchpad InterblockPause
	set duration keypress
	set description "Pause in between every 5 blocks in the row"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if="[isPause] == \"yes\"" text="Mezibloková pauza" x=0 y=0 z_index=0

define sketchpad Introduction
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Toto je testovací verze rybího experimentu" x=0 y=0 z_index=0
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="Pro pokračování stiskněte libovolnou klávesu." x=0 y=64 z_index=0

define sequence MainExperiment
	set flush_keyboard yes
	set description "Run main experient after instructions and training"
	run MainLoop always
	run SetLevel always
	run Feedback always
	run RepeatSequence always
	run InterblockPause "[isPause] == \"yes\""

define loop MainLoop
	set source_file ""
	set source table
	set repeat 1
	set order random
	set description "Main loop with all stimuli loaded in table"
	set cycles 10
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 log_10 "log 1.0 1"
	setcycle 0 log_11 "log 1.1 1"
	setcycle 0 log_12 "log 1.2 1"
	setcycle 0 color orange
	setcycle 0 correct left_button
	setcycle 1 log_10 "log 1.0 2"
	setcycle 1 log_11 "log 1.1 2"
	setcycle 1 log_12 "log 1.2 2"
	setcycle 1 color blue
	setcycle 1 correct right_button
	setcycle 2 log_10 "log 1.0 3"
	setcycle 2 log_11 "log 1.1 3"
	setcycle 2 log_12 "log 1.2 3"
	setcycle 2 color orange
	setcycle 2 correct left_button
	setcycle 3 log_10 "log 1.0 4"
	setcycle 3 log_11 "log 1.1 4"
	setcycle 3 log_12 "log 1.2 4"
	setcycle 3 color blue
	setcycle 3 correct right_button
	setcycle 4 log_10 "log 1.0 5"
	setcycle 4 log_11 "log 1.1 5"
	setcycle 4 log_12 "log 1.2 5"
	setcycle 4 color orange
	setcycle 4 correct left_button
	setcycle 5 log_10 "log 1.0 6"
	setcycle 5 log_11 "log 1.1 6"
	setcycle 5 log_12 "log 1.2 6"
	setcycle 5 color blue
	setcycle 5 correct right_button
	setcycle 6 log_10 "log 1.0 7"
	setcycle 6 log_11 "log 1.1 7"
	setcycle 6 log_12 "log 1.2 7"
	setcycle 6 color orange
	setcycle 6 correct left_button
	setcycle 7 log_10 "log 1.0 8"
	setcycle 7 log_11 "log 1.1 8"
	setcycle 7 log_12 "log 1.2 8"
	setcycle 7 color blue
	setcycle 7 correct right_button
	setcycle 8 log_10 "log 1.0 9"
	setcycle 8 log_11 "log 1.1 9"
	setcycle 8 log_12 "log 1.2 9"
	setcycle 8 color orange
	setcycle 8 correct left_button
	setcycle 9 log_10 "log 1.0 10"
	setcycle 9 log_11 "log 1.1 10"
	setcycle 9 log_12 "log 1.2 10"
	setcycle 9 color blue
	setcycle 9 correct right_button
	run FishTrial

define mouse_response MouseLogger
	set timeout infinite
	set show_cursor yes
	set flush yes
	set duration mouseclick
	set description "Collects mouse responses"
	set correct_response "[correct]"
	set allowed_responses "left_button;right_button"

define inline_script RepeatSequence
	set description "Repeat until enough block were played or particapnt win or lose"
	___run__
	# Repeat whole MainExperiment loop until
	# experiment ran 5 blocks times 6 (cca 25
	# minutes). Or when participant won or 
	# lose quicker.
	
	# Get true/false if it is pause
	var.isPause = var.LEVEL % var.BLOCK_PAUSE == 0	# If modulo return 0 it is pause
	
	# Null the score for next run
	var.SCORE = 0
	
	# Get true/false about ending
	lost = var.LEVEL <= 10
	won = var.LEVEL >= 12
	
	# Decide if game continues
	if (not lost) or (not won):
		print "game continues"
		# try to repeat sequence
		try:
			exp.items['MainExperiment'].prepare()
			exp.items['MainExperiment'].run()
		# If crash then it goes to next objects
		except:
			print "Experiment is over!"
	__end__
	set _prepare ""

define inline_script SetLevel
	set description "Executes Python code"
	___run__
	# Print message to terminal first about 
	# last block
	lvl = str(var.LEVEL)	# Get string to parse it for log
	msg = "Trial " + str(var.TRIAL) + "\t" + \
	      "score " + str(var.SCORE) + "0%\t" + \
		  "log " + lvl[0] + "." + \
		  lvl[1]
	print(msg)
	
	# Set level based on achieved score in
	# past 10 rounds of same level
	try:
		# Level down
		if var.SCORE < 60:
			var.LEVEL -= 1
		# level up
		elif var.SCORE > 60:
			var.LEVEL += 1
	except:
		# The biggest nightmare
		print "ERROR! Cannot adjust level"
	
	# Iterate trial counter
	var.TRIAL += 1
	__end__
	set _prepare ""

define sequence Training
	set flush_keyboard yes
	set description "Training sequence with participant and experimenter at the same time"

define logger WriteLog
	set description "Logs experimental data"
	set auto_log yes
	log LOG

